<!--コメントの表示-->
<% trip_index.each do |trip_comment| %>
  <div class="row mb-4 p-3 bg-light rounded shadow-sm">
    <!-- ユーザー画像 -->
    <div class="col-lg-2 col-md-3 col-sm-4 text-center">
      <%= image_tag trip_comment.user.get_profile_image, size: '80x80', class: 'rounded-circle border' %>
    </div>

    <!-- コメント内容 -->
    <div class="col-lg-9 col-md-8 col-sm-7">
      <div class="comment-details" style="position: relative;">
        <div class="d-flex mb-3">
          <strong><%= trip_comment.user.family_name %> <%= trip_comment.user.first_name %></strong>
          <span class=" ml-5 text-muted"><%= trip_comment.created_at.strftime('%Y/%m/%d') %></span>
          <!-- 削除ボタン -->
          <div style="position: absolute; top: 2px; right: 2px">
            <% if trip_comment.user == current_user %>
              <%= link_to "削除する", trip_trip_comment_path(trip, trip_comment), method: :delete, data: { confirm: "削除してよろしいでしょうか？" }, class: 'btn btn-danger btn-sm', remote: true, data: {"turbolinks" => false} %>
            <% end %>
          </div>
        </div>
        <div class="border rounded p-2 mt-2 mb-2" style="overflow-wrap: break-word;"><%= trip_comment.comment %></div>
      </div>
    </div>
  </div>
<% end %>
<%= paginate trip_index, class: 'pagination' %>



<!-- jQuery CDN (必ず先に読み込む) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<!-- jScroll CDN (必ずjQueryの後に読み込む) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jscroll/2.4.1/jquery.jscroll.min.js"></script>

<script>
  // 無限スクロールを初期化する関数
  function initInfiniteScroll() {
    $('.auto-scroll').jscroll({
      contentSelector: '.auto-scroll',
      nextSelector: '.pagination a[rel=next]',  // 次ページリンクのセレクタ
      loadingHtml: '読み込み中',
      padding: 10
    });
  }

  // ページ読み込み時に無限スクロールを初期化
  $(document).on('turbolinks:load', function() {
    initInfiniteScroll();


  // Ajax通信が成功したときに無限スクロールを再初期化
  $(document).on('ajax:success', function() {
    initInfiniteScroll();
  });

  const targetElement = document.querySelector('#trip-comments');

  // 投稿または削除をした際(getElementByIdで指定した箇所で変更があったのをトリガーに発動する)→結果は1度は動作するが2回やると動作しない…
  document.getElementById('#trip-comments').addEventListener('DOMAttrModified', (event) => {
    initInfiniteScroll();
  });

 });
//   // 監視対象の要素を取得
//   const targetNode = document.getElementById('trip-comments');
//   console.log(targetNode)

//   if (targetNode) {
//   const observer = new MutationObserver((mutationsList, observer) => {
//     // 変更が検出されたときの処理
//     initInfiniteScroll();
//   });

//   // オブザーバの設定
//   const config = {
//       attributes: true,
//       childList: true,
//       subtree: true,
//       characterData: true
//   };

//   // コールバック関数の定義
//   const callback = (mutationsList, observer) => {
//       for(let mutation of mutationsList) {
//           if (mutation.type === 'childList') {
//               console.log('子ノードが変更されました！');
//               initInfiniteScroll();
//           }
//       }
//   };

//   // 監視を開始
//   observer.observe(targetNode, config);
// }

</script>
