<%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>

<!-- チャット相手の表示 -->
<h1 id="room" data-room="<%= @room.id %>" data-user="<%= current_user.id %>" class="mb-3 text-center">
  <strong><%= @user.family_name %><%= @user.first_name %>さんとのチャット</strong>
</h1>

<!--チャット画面-->
<div class="container mb-5">
  <div class="row">
    <div class="col-lg-8 col-md-12 mx-auto">
      <!-- チャット画面全体を中央に埋め込む -->
      <div class="chat-container mx-auto">
        <!-- チャットの中身 -->
        <div class="message pb-5">
          <% previous_date = nil %> <!-- 前の日付を初期化 -->
          <% @chats.each do |chat| %> <!-- chatのデータをeachで回して取得 -->
            <% current_date = chat.created_at.to_date %> <!-- 現在の日付を取得 -->
            <!-- 日付が変わった場合に区切りを表示 -->
            <% if previous_date != current_date %>
              <div class="date-divider text-center" style="background-color: #FFDDFF;">
                <hr>
                <h4><strong><%= current_date.strftime("%m/%d") %></strong></h4>
                <hr>
              </div>
              <% previous_date = current_date %> <!-- 前の日付を更新 -->
            <% end %>
            <!-- メッセージ内容の表示 -->
            <% if chat.user_id == current_user.id %>
              <!--右側 送り主のメッセージ表示-->
              <%= render "public/chats/chat", chat: chat %>
            <% else %>
              <!--左側 受け取り側のメッセージ表示-->
              <%= render 'public/chats/chat_left_side', chat: chat %>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
    <!--chatの送信フォームは部分テンプレート-->
    <%= render 'chat_form', chat: @chat %>
  </div>
</div>




<!--送信したい写真のプレビュー表示 関数名 SendimgPreview-->
<!--ページ遷移した際に最新のメッセージまで自動スクロールしてくれるJavascript( scrollToBottom)-->
<script>
  function SendimgPreview(event, previewId) {
    var input = event.target;  //input要素を取得する
    var reader = new FileReader();  //FileReaderオブジェクトを作成する

    reader.onload = function() {  //イベントハンドラーonload 読み込みが完了したあとの処理
      var preview = document.getElementById(previewId);  //プレビューエリアを取得する
      var img = document.createElement('img');  //新しいimg要素を作成する
      img.src = reader.result;  // 読み込まれたData URLを画像ソースに設定
      img.style.height = '100px';
      img.style.width = '100px';
      preview.innerHTML = '';  //既存の内容をクリアする
      preview.appendChild(img);  //新しい画像をプレビューエリアに追加する
    }

    reader.readAsDataURL(input.files[0]);  //ファイルをData URLとして読み込む
  }

  // 自動スクロール用の関数
  function scrollToBottom() {
    const chatContainer = document.querySelector('.message'); // チャットメッセージを表示するコンテナのクラス
    if (chatContainer) {
      chatContainer.scrollTop = chatContainer.scrollHeight;
    }
  }

  // ページロード時にスクロール
  window.addEventListener('load', scrollToBottom);

  // メッセージ送信時にスクロール
  document.querySelector('.chat-form-container form').addEventListener('submit', function(event) {
    setTimeout(scrollToBottom, 200); // メッセージ送信後にスクロール
    document.getElementById('preview-item3').innerHTML = '';  //既存の内容をクリアする
  });
</script>

